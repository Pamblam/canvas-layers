/*! canvas-layers - v1.0.2 */
class Canvas{constructor(t){this.canvas=t,this.width=t.width,this.height=t.height,this.ctx=t.getContext("2d"),this.layers=[],this.activeLayer=null,this.draggingActiveLayer=!1,this.resizingActiveLayer=!1,this.rotatingActiveLayer=!1,this.lastMouseDownOffset={x:0,y:0},this.activeLayerMouseOffset={x:0,y:0},this.activeLayerOriginalDimensions={width:0,height:0},this.activeLayerRotateStartPos={x:0,y:0},t.addEventListener("mousemove",this.onmousemove.bind(this)),t.addEventListener("mousedown",this.onmousedown.bind(this)),t.addEventListener("mouseout",this.onmousereset.bind(this)),t.addEventListener("mouseup",this.onmousereset.bind(this))}getLayerByName(t){for(var e=this.layers.length;e--;)if(this.layers[e].name===t)return this.layers[e];return null}addLayer(t,e={}){const i=e.name||`Layer ${this.layers.length}`,a=parseFloat(e.x||this.width/2),s=parseFloat(e.y||this.height/2),h=parseFloat(e.rotation||0),r=void 0===e.draggable||e.draggable,n=void 0===!!e.rotateable||e.rotateable,o=void 0===!!e.resizable||e.resizable,l=void 0===!!e.selectable||e.selectable,c=e.width||null,y=e.height||null;var v=new CanvasLayer(t,i,a,s,c,y,h,r,n,o,l);return this.layers.unshift(v),v.load(),v}loadAll(){return Promise.all(this.layers.map(t=>t.load()))}cropToLayer(t){return this.extractPortion(t.x,t.y,t.width,t.height,t.rotation)}extractPortion(t,e,i,a,s=0){var h=s*Math.PI/180,{x:r,y:n}=this.absolutePoint(-i/2,-a/2,t,e,s),o=this.getRotatedRectBB(r,n,i,a,h),l=document.createElement("canvas"),c=l.getContext("2d"),y=document.createElement("canvas"),v=y.getContext("2d"),d=document.createElement("canvas"),g=d.getContext("2d");return y.width=d.width=o.width,y.height=d.height=o.height,l.width=this.width,l.height=this.height,new Promise(t=>{this.loadAll().then(()=>{for(let t=this.layers.length;t--;){let i=this.layers[t];var e=i.rotation*(Math.PI/180);c.translate(i.x,i.y),c.rotate(e),c.drawImage(i.image,-i.width/2,-i.height/2,i.width,i.height),c.rotate(-e),c.translate(-i.x,-i.y)}v.drawImage(l,o.cx-o.width/2,o.cy-o.height/2,o.width,o.height,0,0,o.width,o.height),g.translate(y.width/2,y.height/2),g.rotate(-e),g.drawImage(y,-y.width/2,-y.height/2);var s=(d.width-i)/2,h=(d.height-a)/2;v.clearRect(0,0,y.width,y.height),y.width=i,y.height=a,v.drawImage(d,-s,-h),t(y.toDataURL())})})}getRotatedRectBB(t,e,i,a,s){var h=Math.abs(Math.cos(s)),r=Math.abs(Math.sin(s));return{cx:t+i/2*Math.cos(s)-a/2*Math.sin(s),cy:e+i/2*Math.sin(s)+a/2*Math.cos(s),width:i*h+a*r,height:i*r+a*h}}draw(){this.loadAll().then(()=>{this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);for(let e=this.layers.length;e--;){let i=this.layers[e];var t=i.rotation*(Math.PI/180);this.ctx.translate(i.x,i.y),this.ctx.rotate(t),this.ctx.drawImage(i.image,-i.width/2,-i.height/2,i.width,i.height),i===this.activeLayer&&(this.ctx.strokeStyle=Canvas.strokeStyle,this.ctx.fillStyle=Canvas.fillStyle,this.ctx.lineWidth=Canvas.lineWidth,this.ctx.strokeRect(-i.width/2,-i.height/2,i.width,i.height),i.resizable&&i.getCorners(!0).forEach(t=>{this.drawCircle(t.x,t.y,Canvas.anchorRadius)}),i.rotateable&&(this.ctx.beginPath(),this.ctx.moveTo(0,0),this.ctx.lineTo(i.width/2+25,0),this.ctx.stroke(),this.drawCircle(i.width/2+25,0,Canvas.anchorRadius))),this.ctx.rotate(-t),this.ctx.translate(-i.x,-i.y)}})}drawCircle(t,e,i){this.ctx.beginPath(),this.ctx.arc(t,e,i,0,2*Math.PI,!0),this.ctx.closePath(),this.ctx.fill()}onmousemove(t){var{x:e,y:i}=this.canvasMousePos(t);if(this.setCursor(e,i),null!==this.activeLayer)if(this.rotatingActiveLayer){if(this.fireEvent("layer-rotate")){var a=e-this.activeLayer.x,s=i-this.activeLayer.y,h=180*Math.atan2(s,a)/Math.PI;this.activeLayer.rotation=h,this.draw()}}else this.draggingActiveLayer?this.fireEvent("layer-drag")&&(this.activeLayer.x=this.activeLayerMouseOffset.x+e,this.activeLayer.y=this.activeLayerMouseOffset.y+i,this.draw()):this.resizingActiveLayer&&this.fireEvent("layer-resize")&&(this.doUserLayerResize(e,i),this.draw())}setCursor(t,e){this.rotatingActiveLayer?document.body.style.cursor=Canvas.cursors.rotating:this.draggingActiveLayer?document.body.style.cursor=Canvas.cursors.grabbing:this.resizingActiveLayer?document.body.style.cursor=Canvas.cursors.move:this.isNearActiveCorner(t,e)?document.body.style.cursor=Canvas.cursors.move:this.isNearActiveRotatePoint(t,e)?document.body.style.cursor=Canvas.cursors.rotate:this.isOverSelectableLayer(t,e)?document.body.style.cursor=Canvas.cursors.grab:document.body.style.cursor=Canvas.cursors.default}doUserLayerResize(t,e){var i=this.lastMouseDownOffset,a=this.layerRelativePoint(t,e,this.activeLayer);i.x>0?this.activeLayer.width=Math.abs(this.activeLayerOriginalDimensions.width-2*(i.x-a.x)):this.activeLayer.width=Math.abs(this.activeLayerOriginalDimensions.width-2*(a.x-i.x)),i.y>0?this.activeLayer.height=Math.abs(this.activeLayerOriginalDimensions.height-2*(i.y-a.y)):this.activeLayer.height=Math.abs(this.activeLayerOriginalDimensions.height-2*(a.y-i.y))}fireEvent(t){var e=new CustomEvent(t,{detail:this,cancelable:!0,bubbles:!0});return this.canvas.dispatchEvent(e)}onmousedown(t){var{x:e,y:i}=this.canvasMousePos(t);if(this.setCursor(e,i),this.isNearActiveRotatePoint(e,i))this.activeLayerRotateStartPos={x:e,y:i},this.rotatingActiveLayer=!0;else if(this.isNearActiveCorner(e,i))this.resizingActiveLayer=!0;else{var a=!1,s=this.getLayerAt(e,i);null!==s&&!1===s.selectable&&(s=null),null!==s&&null!==this.activeLayer&&s!==this.activeLayer&&(a=!this.deSelectLayer()),a||null===s||(this.activeLayerMouseOffset.x=s.x-e,this.activeLayerMouseOffset.y=s.y-i,s.draggable&&(this.draggingActiveLayer=!0),s!==this.activeLayer&&this.selectLayer(s))}this.activeLayer&&(this.activeLayerOriginalDimensions={width:this.activeLayer.width,height:this.activeLayer.height},this.lastMouseDownOffset=this.layerRelativePoint(e,i,this.activeLayer))}selectLayer(t){var e=this.fireEvent("layer-select");return e&&(this.layers.unshift(this.layers.splice(this.layers.indexOf(t),1)[0]),this.activeLayer=t,this.draw()),e}deSelectLayer(){var t=this.fireEvent("layer-deselect");return t&&(this.activeLayer=null,this.draggingActiveLayer=!1,this.draw()),t}isNearActiveRotatePoint(t,e){if(!this.activeLayer||!this.activeLayer.rotateable)return!1;var{x:t,y:e}=this.layerRelativePoint(t,e,this.activeLayer),i=this.activeLayer.width/2+25;return Math.hypot(i-t,0-e)<=Canvas.anchorRadius}isNearActiveCorner(t,e){if(!this.activeLayer||!this.activeLayer.resizable)return!1;var{x:t,y:e}=this.layerRelativePoint(t,e,this.activeLayer),i=!1;return this.activeLayer.getCorners(!0).forEach(a=>{Math.hypot(a.x-t,a.y-e)<=Canvas.anchorRadius&&(i=!0)}),i}layerRelativePoint(t,e,i){return this.relativePoint(t,e,i.x,i.y,i.rotation)}relativePoint(t,e,i,a,s){t-=i,e-=a;var h=s*(Math.PI/180),r=Math.cos(h),n=Math.sin(h),o=t*r+e*n,l=-t*n+e*r;return{x:o=Math.floor(100*o)/100,y:l=Math.floor(100*l)/100}}absolutePoint(t,e,i,a,s){var h=s*(Math.PI/180),r=Math.cos(h),n=Math.sin(h);return{x:i+t*r-e*n,y:a+t*n+e*r}}onmousereset(t){var{x:e,y:i}=this.canvasMousePos(t);this.draggingActiveLayer=!1,this.resizingActiveLayer=!1,this.rotatingActiveLayer=!1,this.lastMouseDownOffset={x:0,y:0},this.activeLayerMouseOffset={x:0,y:0},this.activeLayerOriginalDimensions={width:0,height:0},this.activeLayerRotateStartPos={x:0,y:0},this.setCursor(e,i)}canvasMousePos(t){var e=this.canvas.getBoundingClientRect(),i=t.clientX-e.left,a=t.clientY-e.top,s=this.canvas.width/e.width,h=this.canvas.height/e.height;return{x:i*=s,y:a*=h}}getLayerAt(t,e){for(let i=0;i<this.layers.length;i++){let a=this.layers[i];if(this.isOverLayer(t,e,a))return a}return null}isOverSelectableLayer(t,e){for(let i=this.layers.length;i--;)if(this.isOverLayer(t,e,this.layers[i])&&this.layers[i].selectable&&this.activeLayer!==this.layers[i])return!0;return!1}isOverLayer(t,e,i){let a=this.layerRelativePoint(t,e,i);return!(a.x>i.width/2)&&(!(a.x<-i.width/2)&&(!(a.y>i.height/2)&&!(a.y<-i.height/2)))}}Canvas.version="1.0.2",Canvas.anchorRadius=8,Canvas.strokeStyle="#ba0000",Canvas.fillStyle="black",Canvas.lineWidth=5,Canvas.cursors={default:null,grab:"grab",grabbing:"grabbing",move:"crosshair",rotate:"grab",rotating:"grabbing"};class CanvasLayer{constructor(t,e,i,a,s=null,h=null,r=0,n=!0,o=!0,l=!0,c=!0){this.name=e,this.url=t,this.ready=!1,this.image=null,this.x=i,this.y=a,this.width=s,this.height=h,this.rotation=r,this.draggable=n,this.rotateable=o,this.resizable=l,this.selectable=c,this.load_cb_stack=[]}onload(t){this.ready?t():this.load_cb_stack.push(t)}getCorners(t=!1){return t?[{x:-this.width/2,y:-this.height/2},{x:-this.width/2+this.width,y:-this.height/2},{x:-this.width/2+this.width,y:-this.height/2+this.height},{x:-this.width/2,y:-this.height/2+this.height}]:[{x:this.x-this.width/2,y:this.y-this.height/2},{x:this.x-this.width/2+this.width,y:this.y-this.height/2},{x:this.x-this.width/2+this.width,y:this.y-this.height/2+this.height},{x:this.x-this.width/2,y:this.y-this.height/2+this.height}]}load(){return new Promise(t=>{if(this.ready)return t();const e=new Image;e.onload=(()=>{this.image=e,this.ready=!0,null===this.width&&(this.width=e.width),null===this.height&&(this.height=e.height),this.load_cb_stack.forEach(t=>t()),this.load_cb_stack=[],t()}),e.src=this.url})}}